[{"title":"webpack学习(一)","url":"http://gruad.github.io/2017/03/16/webpack学习笔记（一）/","content":"<p><a href=\"http://webpackdoc.com/\" target=\"_blank\" rel=\"external\">Webpack中文学习文档</a><br><a href=\"http://webpack.github.io/docs/\" target=\"_blank\" rel=\"external\">Webpack官方文档</a><br><a href=\"https://docs.npmjs.com/\" target=\"_blank\" rel=\"external\">npm文档</a><br><a href=\"http://es6.ruanyifeng.com/#docs/module\" target=\"_blank\" rel=\"external\">阮一峰ECMA6入门</a><br><a href=\"http://blog.csdn.net/kun5706947/article/details/52596766\" target=\"_blank\" rel=\"external\">参考博文</a><br><a href=\"https://segmentfault.com/a/1190000006968235\" target=\"_blank\" rel=\"external\">学习博文</a></p>\n<h3 id=\"1-什么是Webpack\"><a href=\"#1-什么是Webpack\" class=\"headerlink\" title=\"1. 什么是Webpack\"></a>1. 什么是Webpack</h3><p>Webpack是当下最热门的前端资源模块化（module)管理和打包（pack)工具。它可以将许多松散的模块按照<strong>依赖</strong>和规则打包成符合生产环境部署的前端资源。&gt; 还可以将<strong>按需加载</strong>的模块进行代码分离。等到实际需要的时候在<strong>异步加载</strong>。</p>\n<blockquote>\n<p>通过loader的转换，任何形式的资源都可以视作模块，比如CommonJs模块、AMD模块、ES6模块、CSS、图片、JSON、Coffeescript、LESS等。</p>\n</blockquote>\n<h3 id=\"2-模块系统功能\"><a href=\"#2-模块系统功能\" class=\"headerlink\" title=\"2. 模块系统功能\"></a>2. 模块系统功能</h3><blockquote>\n<p>模块系统主要解决模块的定义、依赖、导出。</p>\n</blockquote>\n<h3 id=\"3-普通的以script方式引入模块存在的问题\"><a href=\"#3-普通的以script方式引入模块存在的问题\" class=\"headerlink\" title=\"3. 普通的以script方式引入模块存在的问题\"></a>3. 普通的以script方式引入模块存在的问题</h3><ol>\n<li>全局作用域下容易造成变量的冲突。</li>\n<li>文件只能按照script的书写顺序进行加载。</li>\n<li>开发人员<strong>必须主观</strong>解决模块和代码库的<strong>依赖关系</strong>。</li>\n<li>在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪，难以维护。</li>\n</ol>\n<h3 id=\"4-CommonJS方式思想和问题\"><a href=\"#4-CommonJS方式思想和问题\" class=\"headerlink\" title=\"4. CommonJS方式思想和问题\"></a>4. CommonJS方式思想和问题</h3><p>服务器端的NodeJS遵循CommonJS规范，该规范的核心思想：</p>\n<blockquote>\n<p>允许模块通过require方式来<strong>同步加载</strong>所需要的依赖的其他模块，然后通过exports或module.exports来导出需要暴露的接口。</p>\n</blockquote>\n<p>优点：</p>\n<ol>\n<li>服务器端模块便于重用</li>\n<li>NPM 中已经有将近20万个可以使用模块包</li>\n<li>简单并容易使用</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>同步的模块加载方式不适合在浏览器环境中，同步意味着<strong>阻塞加载</strong>，<strong>浏览器资源是异步加载</strong>的</li>\n<li>不能<strong>非阻塞的并行加载</strong>多个模块</li>\n</ol>\n<h3 id=\"5-AMD\"><a href=\"#5-AMD\" class=\"headerlink\" title=\"5. AMD\"></a>5. AMD</h3><p>Asynchronous Module Definition 规范其实只有一个主要的接口define（id?,dependencies?,factory)，它要在声明模块的时候指定所有的依赖dependencies,并且还要当做形参传到factory中，对于依赖的模块提前执行，提前前置。</p>\n<p>优点：</p>\n<ol>\n<li>适合在浏览器环境中异步加载模块</li>\n<li>可以并行加载多个模块</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不顺畅</li>\n<li>不符合通用的模块化思维方式，是一种妥协的实现</li>\n</ol>\n<p>实现：</p>\n<p>RequireJS<br>curl</p>\n<h3 id=\"6-CMD\"><a href=\"#6-CMD\" class=\"headerlink\" title=\"6. CMD\"></a>6. CMD</h3><p>Common Module Definition 规范和 AMD 很相似，尽量保持简单，并与 CommonJS 和 Node.js 的 Modules 规范保持了很大的兼容性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">require, exports, module</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>);</div><div class=\"line\">  <span class=\"keyword\">var</span> Spinning = <span class=\"built_in\">require</span>(<span class=\"string\">'./spinning'</span>);</div><div class=\"line\">  exports.doSomething = ...</div><div class=\"line\">  <span class=\"built_in\">module</span>.exports = ...</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>优点：</p>\n<ol>\n<li>依赖就近，延迟执行</li>\n<li>可以很容易在 Node.js 中运行</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>依赖 SPM 打包，模块的加载逻辑偏重</li>\n</ol>\n<p>实现：</p>\n<p>Sea.js<br>coolie</p>\n<h3 id=\"7-Webpack中蕴含的思想\"><a href=\"#7-Webpack中蕴含的思想\" class=\"headerlink\" title=\"7. Webpack中蕴含的思想\"></a>7. Webpack中蕴含的思想</h3><ol>\n<li><p>前端模块加载方式：<strong>分块传输</strong>，按需进行<strong>懒加载</strong>，在实际用到某些模块的时候再<strong>增量更新</strong>，才是较为合理的模块加载方案。<br>要实现模块的按需加载，就需要一个对整个代码库中的模块进行静态分析、编译打包的过程。</p>\n<blockquote>\n<p>在编译的时候，要对整个代码进行静态分析，分析出各个模块的类型和它们依赖关系，然后将不同类型的模块提交给适配的加载器来处理。</p>\n</blockquote>\n</li>\n<li><p>Webpack 会分析入口文件，解析包含依赖关系的各个文件。这些文件（模块）都打包到 bundle.js 。Webpack 会给每个模块<strong>分配一个唯一的 id 并通过这个 id 索引和访问模块</strong>。在页面启动时，会先执行 entry.js 中的代码，其它模块会在运行 require 的时候再执行。</p>\n</li>\n</ol>\n<h3 id=\"8-Webpack的特点\"><a href=\"#8-Webpack的特点\" class=\"headerlink\" title=\"8. Webpack的特点\"></a>8. Webpack的特点</h3><h6 id=\"Webpack和其他模块化工具有什么区别呢？\"><a href=\"#Webpack和其他模块化工具有什么区别呢？\" class=\"headerlink\" title=\"Webpack和其他模块化工具有什么区别呢？\"></a>Webpack和其他模块化工具有什么区别呢？</h6><h6 id=\"代码拆分\"><a href=\"#代码拆分\" class=\"headerlink\" title=\"代码拆分\"></a>代码拆分</h6><p>Webpack 有两种组织模块依赖的方式，同步和异步。<strong>异步依赖作为分割点</strong>，形成一个新的块。在优化了依赖树后，每一个异步区块都作为一个文件被打包。</p>\n<h6 id=\"Loader\"><a href=\"#Loader\" class=\"headerlink\" title=\"Loader\"></a>Loader</h6><p>Webpack 本身只能处理原生的 JavaScript 模块，但是 loader 转换器可以将各种类型的资源转换成 JavaScript 模块。这样，任何资源都可以成为 Webpack 可以处理的模块。</p>\n<h6 id=\"智能解析\"><a href=\"#智能解析\" class=\"headerlink\" title=\"智能解析\"></a>智能解析</h6><p>Webpack 有一个智能解析器，几乎可以处理任何第三方库，无论它们的模块形式是 CommonJS、 AMD 还是普通的 JS 文件。甚至在加载依赖的时候，允许使用动态表达式 require(“./templates/“ + name + “.jade”)。</p>\n<h6 id=\"插件系统\"><a href=\"#插件系统\" class=\"headerlink\" title=\"插件系统\"></a>插件系统</h6><p>Webpack 还有一个功能丰富的插件系统。大多数内容功能都是基于这个插件系统运行的，还可以开发和使用开源的 Webpack 插件，来满足各式各样的需求。</p>\n<h6 id=\"快速运行\"><a href=\"#快速运行\" class=\"headerlink\" title=\"快速运行\"></a>快速运行</h6><p>Webpack 使用<strong>异步 I/O</strong> 和<strong>多级缓存</strong>提高运行效率，这使得 Webpack 能够以令人难以置信的速度快速增量编译。</p>\n<p>未完待续…持续更新中</p>\n","categories":["Webpack"],"tags":["打包Webpack 模块化管理module"]},{"title":"究竟要行过多少路，做过什么事，才能做起来毫不费力和开心","url":"http://gruad.github.io/2017/03/08/究竟要行过多少路，做过什么事，才能做起来毫不费力、开心/","content":"","categories":["随笔"],"tags":["心情"]},{"title":"前端各种高度宽度总结-持续积累更新中","url":"http://gruad.github.io/2017/03/08/前端各种高度宽度总结-持续积累更新中/","content":"<p><img src=\"/img/123.png\" alt=\"\"><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1.</span> <span class=\"built_in\">document</span>.body.offsetWidth\t网页可见区域宽度（包括滚动条和边框）</div><div class=\"line\"><span class=\"number\">2.</span> <span class=\"built_in\">document</span>.body.scrollWidth    网页正文全文宽度</div><div class=\"line\"><span class=\"number\">3.</span> <span class=\"built_in\">document</span>.body.clientWidth    网页可见区域宽度</div><div class=\"line\"><span class=\"number\">4.</span> <span class=\"built_in\">document</span>.body.scrollTop\t<span class=\"built_in\">document</span>.documentElement.scrollTop (IE)\t网页被卷去的高度</div><div class=\"line\"><span class=\"number\">5.</span> <span class=\"built_in\">document</span>.body.scrollLeft  \t网页被卷去的左</div><div class=\"line\"><span class=\"number\">6.</span> <span class=\"built_in\">window</span>.sreenTop \t\t\t\t网页正文部分上</div><div class=\"line\"><span class=\"number\">7.</span> <span class=\"built_in\">window</span>.screenLeft\t\t\t网页正文部分左</div><div class=\"line\"><span class=\"number\">8.</span> obj.offsetWidth \t\t\t\t某个元素的宽</div><div class=\"line\"><span class=\"number\">9.</span> \t某个元素的上边界到body最顶部的距离：obj.offsetTop;（在元素的包含元素不含滚动条的情况下）</div><div class=\"line\"><span class=\"number\">10.</span> 某个元素的左边界到body最左边的距离：obj.offsetLeft;（在元素的包含元素不含滚动条的情况下）</div><div class=\"line\"><span class=\"number\">11.</span> 返回当前元素的上边界到它的包含元素的上边界的偏移量：obj.offsetTop（在元素的包含元素含滚动条的情况下）</div><div class=\"line\"><span class=\"number\">12.</span> 返回当前元素的左边界到它的包含元素的左边界的偏移量：obj.offsetLeft（在元素的包含元素含滚动条的情况下）</div></pre></td></tr></table></figure></p>\n","categories":["基础积累"],"tags":["基础"]},{"title":"JavaScript实现加载效果与实际应用","url":"http://gruad.github.io/2017/03/08/JavaScript实现加载效果与实际应用/","content":"<h3 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1. 背景\"></a>1. 背景</h3><p>最近实习在做一个项目，需求：需要在一个页面点击按钮加载出包括表格和几张图表（图表为ajax动态请求数据和highchart画出）<br>所以需要等待加载状态，提示用户正在加载，增强用户交互体验和友好度。<br>类似效果：<br><img src=\"/img/loading.png\" alt=\"\"></p>\n<h3 id=\"2-实现过程\"><a href=\"#2-实现过程\" class=\"headerlink\" title=\"2. 实现过程\"></a>2. 实现过程</h3><p>实现一个加载效果不难，重要的是要把页面中每个的图表都加上加载效果，需要考虑每个图表的高度（不同）和宽度，还有初始化显示的位置。<br>代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// showMask</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showMask</span>(<span class=\"params\">n</span>) </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 每个container图表的顶部距离body的高度</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> top = $(<span class=\"string\">\"#container\"</span> + n).offset().top;</div><div class=\"line\">\t<span class=\"comment\">// 每个container图表的高度</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> height = $(<span class=\"string\">\"#container\"</span> + n).height();</div><div class=\"line\">\t<span class=\"comment\">// 定义mask遮蔽层并初始化</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> mask = $(<span class=\"string\">'&lt;div id=\"mask'</span> + n + <span class=\"string\">'\"&gt;&lt;/div&gt;'</span>).css(&#123;</div><div class=\"line\">\t\tdisplay : <span class=\"string\">\"block\"</span>,</div><div class=\"line\">\t\tposition : <span class=\"string\">\"absolute\"</span>,</div><div class=\"line\">\t\tbackground : <span class=\"string\">\"#F2F2F2\"</span>,</div><div class=\"line\">\t\topacity:<span class=\"number\">0.4</span>,</div><div class=\"line\">\t\twidth : <span class=\"string\">\"100%\"</span>,</div><div class=\"line\">\t\theight : height,</div><div class=\"line\">\t\ttop : top</div><div class=\"line\">\t&#125;).appendTo($(<span class=\"string\">\"body\"</span>));</div><div class=\"line\">\t<span class=\"comment\">// 定义加载提示信息并初始化</span></div><div class=\"line\">\t$(<span class=\"string\">'&lt;div id=\"msg'</span> + n + <span class=\"string\">'\"&gt;&lt;/div&gt;'</span>)</div><div class=\"line\">\t\t\t.html(<span class=\"string\">\"&lt;i class='fa fa-spinner fa-spin'&gt;&lt;/i&gt;&lt;span id='span1'&gt;正在处理，请稍候。。。&lt;/span&gt;\"</span>)</div><div class=\"line\">\t\t\t.appendTo($(<span class=\"string\">\"body\"</span>)).css(&#123;</div><div class=\"line\">\t\t\t\tdisplay : <span class=\"string\">\"block\"</span>,</div><div class=\"line\">\t\t\t\tposition : <span class=\"string\">\"absolute\"</span>,</div><div class=\"line\">\t\t\t\t<span class=\"string\">'font-size'</span> : <span class=\"string\">\"16px\"</span>,</div><div class=\"line\">\t\t\t\tleft : $(<span class=\"string\">\"#mask\"</span> + n).width() / <span class=\"number\">2</span> - $(<span class=\"string\">\"#span1\"</span>).width() / <span class=\"number\">2</span>,</div><div class=\"line\">\t\t\t\ttop : top + $(<span class=\"string\">\"#mask\"</span> + n).height() / <span class=\"number\">2</span></div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"3-效果\"><a href=\"#3-效果\" class=\"headerlink\" title=\"3. 效果\"></a>3. 效果</h3><p><img src=\"/img/loading1.jpg\" alt=\"\"></p>\n","categories":["携程实习"],"tags":["加载效果"]},{"title":"JavaScript实现数组去重","url":"http://gruad.github.io/2017/03/03/JavaScript实现数组去重/","content":"<h3 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1. 背景\"></a>1. 背景</h3><p>数组去重的方法网上有很多，至少有五种之多，具体可查阅百度。<br>因为最近自己在做项目，需要写一个省市区的联动选择控件，所以需要用到去重，于是自己就思考着写了一个。</p>\n<h3 id=\"2-源码\"><a href=\"#2-源码\" class=\"headerlink\" title=\"2. 源码\"></a>2. 源码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uniqueArray</span>(<span class=\"params\">array</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> arr=[];</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=array.length;i&lt;len;i++)&#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=i+<span class=\"number\">1</span>;j&lt;len;j++)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(array[i]===array[j])</div><div class=\"line\">\t\tj=++i;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tarr.push(array[i]);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> arr</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-源码截图\"><a href=\"#3-源码截图\" class=\"headerlink\" title=\"3. 源码截图\"></a>3. 源码截图</h3><p><img src=\"/img/unique1.png\" alt=\"\"></p>\n<h3 id=\"4-测试数组\"><a href=\"#4-测试数组\" class=\"headerlink\" title=\"4. 测试数组\"></a>4. 测试数组</h3><p><img src=\"/img/unique2.png\" alt=\"\"></p>\n<h3 id=\"5-运行结果\"><a href=\"#5-运行结果\" class=\"headerlink\" title=\"5. 运行结果\"></a>5. 运行结果</h3><p><img src=\"/img/unique3.png\" alt=\"\"></p>\n","categories":["算法"],"tags":["数组去重"]},{"title":"Vue.js学习笔记（一）","url":"http://gruad.github.io/2017/02/16/Vue-js学习笔记(一)/","content":"<h3 id=\"常见的标签指令含义\"><a href=\"#常见的标签指令含义\" class=\"headerlink\" title=\"常见的标签指令含义\"></a>常见的标签指令含义</h3><ol>\n<li>v-bind<br>简写：:id=”message”<br>绑定标签属性的</li>\n<li>v-model<br>双向数据绑定的</li>\n<li>v-for<br>列表渲染用的</li>\n<li>v-if<br>条件渲染用的</li>\n<li>v-on<br>简写：@click=”method”<br>绑定事件的</li>\n</ol>\n","categories":["Vue.js"],"tags":["Vue.js"]},{"title":"Jquery的attr()函数和prop()和val()和html()和text()和css()函数比较","url":"http://gruad.github.io/2017/02/09/Jquery的attr-函数和val-函数和css-函数比较/","content":"","categories":["技术基础"],"tags":["jquery"]},{"title":"bootstrap table 学习与实践","url":"http://gruad.github.io/2017/02/07/bootstrap-table-学习与实践/","content":"<h3 id=\"1-bootstrap-table学习参考文档地址\"><a href=\"#1-bootstrap-table学习参考文档地址\" class=\"headerlink\" title=\"1. bootstrap-table学习参考文档地址\"></a>1. bootstrap-table学习参考文档地址</h3><p><a href=\"http://bootstrap-table.wenzhixin.net.cn/documentation/\" target=\"_blank\" rel=\"external\">bootstrap-table官方英文文档</a><br><a href=\"http://bootstrap-table.wenzhixin.net.cn/zh-cn/documentation/\" target=\"_blank\" rel=\"external\">bootstrap-table官方中文文档</a><br><a href=\"https://github.com/wenzhixin/bootstrap-table/\" target=\"_blank\" rel=\"external\">bootstrap-table的github文档</a></p>\n<h3 id=\"2-引入依赖的资源文件\"><a href=\"#2-引入依赖的资源文件\" class=\"headerlink\" title=\"2. 引入依赖的资源文件\"></a>2. 引入依赖的资源文件</h3><p><img src=\"/img/bootstrap1.png\" alt=\"\"></p>\n<h3 id=\"3-有两种table构建方式\"><a href=\"#3-有两种table构建方式\" class=\"headerlink\" title=\"3. 有两种table构建方式\"></a>3. 有两种table构建方式</h3><p>3.1 代码写好表头</p>\n<blockquote>\n<p>思路是前端布局好格式(包括表头结构)，后端用异步请求获取数据，填充表格</p>\n</blockquote>\n<p>方式一：如下图<br><img src=\"/img/bootstrap2.png\" alt=\"\"></p>\n<p>前端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;table id=<span class=\"string\">\"table\"</span></div><div class=\"line\">\t data-toggle=<span class=\"string\">\"table\"</span></div><div class=\"line\">\t data-toolbar=<span class=\"string\">\"#toolbar\"</span></div><div class=\"line\">\t data-pagination=<span class=\"string\">\"true\"</span> </div><div class=\"line\">\t data-search=<span class=\"string\">\"true\"</span> </div><div class=\"line\">\t data-row-style=<span class=\"string\">\"rowStyle\"</span></div><div class=\"line\">\t data-filter-control=<span class=\"string\">\"true\"</span></div><div class=\"line\">\t data-filter-show-clear=<span class=\"string\">\"true\"</span> </div><div class=\"line\">\t data-show-pagination-<span class=\"keyword\">switch</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">\t data-detail-view=<span class=\"literal\">true</span></div><div class=\"line\">\t data-detail-formatter=<span class=\"string\">\"detailFormatter\"</span></div><div class=\"line\">\t data-row-style=<span class=\"string\">\"rowStyle\"</span>&gt;</div><div class=\"line\">\t\t&lt;thead&gt;</div><div class=\"line\">\t\t\t&lt;tr&gt;</div><div class=\"line\">\t\t\t\t&lt;th data-formatter=<span class=\"string\">\"runningFormatter\"</span> data-align=<span class=\"string\">\"center\"</span>&gt;&lt;/th&gt;</div><div class=\"line\">\t\t\t\t&lt;th data-field=<span class=\"string\">\"P_Id\"</span> data-visible=<span class=\"string\">\"false\"</span>&gt;ID&lt;<span class=\"regexp\">/th&gt;</span></div><div class=\"line\"><span class=\"regexp\">\t\t\t\t&lt;th data-field=\"SubjectSort\" data-sortable=\"true\"&gt;文本&lt;/</span>th&gt;</div><div class=\"line\">\t\t\t\t&lt;th data-field=<span class=\"string\">\"Subject\"</span> data-sortable=<span class=\"string\">\"true\"</span>data-filter-control=<span class=\"string\">\"select\"</span>&gt;文本&lt;<span class=\"regexp\">/th&gt;</span></div><div class=\"line\"><span class=\"regexp\">\t\t\t\t&lt;th data-field=\"Remarks\" data-sortable=\"true\" data-formatter=\"remarksFormatter\"&gt;文本&lt;/</span>th&gt;</div><div class=\"line\">\t\t\t\t&lt;th data-field=<span class=\"string\">\"Author\"</span> data-sortable=<span class=\"string\">\"true\"</span> data-filter-control=<span class=\"string\">\"select\"</span>&gt;文本&lt;<span class=\"regexp\">/th&gt;</span></div><div class=\"line\"><span class=\"regexp\">\t\t\t    &lt;th data-field=\"Tag\" data-sortable=\"true\" data-formatter=\"tagsFormatter\" data-filter-control=\"input\" data-events=\"tagsEvents\"&gt;文本&lt;/</span>th&gt;</div><div class=\"line\">\t\t\t\t&lt;th data-field=<span class=\"string\">\"Attachment\"</span> data-formatter=<span class=\"string\">\"attachmentFormatter\"</span></div><div class=\"line\">\t\t\t\t\tdata-align=<span class=\"string\">\"center\"</span>&gt;文本&lt;<span class=\"regexp\">/th&gt;</span></div><div class=\"line\"><span class=\"regexp\">\t\t\t\t&lt;th data-field=\"CreateDT\" data-sortable=\"true\" data-width=\"160px\"&gt;文本&lt;/</span>th&gt;</div><div class=\"line\">\t\t\t\t&lt;th data-field=<span class=\"string\">\"UpdatedDT\"</span> data-sortable=<span class=\"string\">\"true\"</span> data-width=<span class=\"string\">\"160px\"</span>&gt;文本&lt;<span class=\"regexp\">/th&gt;</span></div><div class=\"line\"><span class=\"regexp\">\t\t\t&lt;/</span>tr&gt;</div><div class=\"line\">\t\t&lt;<span class=\"regexp\">/thead&gt;</span></div><div class=\"line\"><span class=\"regexp\">&lt;/</span>table&gt;</div></pre></td></tr></table></figure></p>\n<p>js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//异步请求获取数据，填充表格\t</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMemos</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t$.ajax(&#123;</div><div class=\"line\">\t\ttype : <span class=\"string\">\"GET\"</span>,</div><div class=\"line\">\t\tasyn : <span class=\"literal\">true</span>,</div><div class=\"line\">\t\turl : <span class=\"string\">\"&lt;c:url value='/getMemos'/&gt;\"</span> + <span class=\"string\">\"?date=\"</span></div><div class=\"line\">\t\t\t\t+ <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(),</div><div class=\"line\">\t\tsuccess : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">datas</span>) </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> data = datas.rows;</div><div class=\"line\">\t\t\t$(<span class=\"string\">'#table'</span>).bootstrapTable(<span class=\"string\">'load'</span>, data);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>运行结果<br><img src=\"/img/bootstrap3.png\" alt=\"\"></p>\n<p>3.2 无表头，自动构建表头</p>\n<blockquote>\n<p>思路是前端只定义表格，后端用异步请求获取数据，构造表格结构和填充表格</p>\n</blockquote>\n<p>方式二：如下图<br><img src=\"/img/bootstrap4.png\" alt=\"\"></p>\n<p>前端代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;table id=<span class=\"string\">\"table\"</span></div><div class=\"line\">\t   data-toggle=<span class=\"string\">\"table\"</span></div><div class=\"line\">\t   data-toolbar=<span class=\"string\">\"#toolbar\"</span></div><div class=\"line\">\t   data-pagination=<span class=\"string\">\"true\"</span></div><div class=\"line\">\t   data-page-size=<span class=\"string\">\"20\"</span></div><div class=\"line\">\t   data-row-style=<span class=\"string\">\"rowStyle\"</span></div><div class=\"line\">\t   data-<span class=\"literal\">undefined</span>-text=<span class=\"string\">\"\"</span></div><div class=\"line\">       data-show-<span class=\"keyword\">export</span>=<span class=\"string\">\"true\"</span>&gt;</div><div class=\"line\">&lt;<span class=\"regexp\">/table&gt;</span></div></pre></td></tr></table></figure></p>\n<p>js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getHeaderAndData</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">    $.ajax(&#123;</div><div class=\"line\">        type: <span class=\"string\">\"POST\"</span>,</div><div class=\"line\">        url: <span class=\"string\">\"../headerAndData/groupPriceMapping\"</span> + <span class=\"string\">\"?date=\"</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(),</div><div class=\"line\">        data: &#123;</div><div class=\"line\">            start_dt: start_dt,</div><div class=\"line\">            end_dt: end_dt</div><div class=\"line\">        &#125;,  </div><div class=\"line\">        beforeSend: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">xhr</span>) </span>&#123;</div><div class=\"line\">            xhr.setRequestHeader(header, token);</div><div class=\"line\">        &#125;,</div><div class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">datas</span>) </span>&#123;</div><div class=\"line\">        \t<span class=\"built_in\">console</span>.log(datas);</div><div class=\"line\">            <span class=\"keyword\">var</span> data = datas.data[<span class=\"number\">0</span>].rows;</div><div class=\"line\">            datas.columns.unshift(&#123;</div><div class=\"line\">    \t\t\t    field : <span class=\"string\">'Index'</span>,</div><div class=\"line\">    \t\t\t    title : <span class=\"string\">'序号'</span>,</div><div class=\"line\">    \t\t\t    sortable : <span class=\"literal\">true</span></div><div class=\"line\">    \t\t\t&#125;);</div><div class=\"line\">    \t\t<span class=\"comment\">//console.log(datas.columns);</span></div><div class=\"line\">    \t\t    $.each(data, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index, obj</span>) </span>&#123;   \t\t</div><div class=\"line\">    \t\t\t\tdata[index].Index=index+<span class=\"number\">1</span>;</div><div class=\"line\">    \t\t    &#125;);</div><div class=\"line\">    \t\t<span class=\"comment\">//console.log(data);</span></div><div class=\"line\">            $(<span class=\"string\">'#table'</span>).bootstrapTable(<span class=\"string\">'destroy'</span>).bootstrapTable(&#123;</div><div class=\"line\">    \t\t\tcolumns : datas.columns,</div><div class=\"line\">    \t\t\tdata : data</div><div class=\"line\">    \t\t    &#125;);            </div><div class=\"line\">        &#125;,</div><div class=\"line\">    \terror : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">xhr, status, e</span>) </span>&#123;</div><div class=\"line\">\t\t\t$.messager.alert(<span class=\"string\">'Alert'</span>,status,<span class=\"string\">'error'</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>运行结果<br><img src=\"/img/bootstrap5.png\" alt=\"\"></p>\n<h3 id=\"4-bootstrap-table简单学习，后续持续更新\"><a href=\"#4-bootstrap-table简单学习，后续持续更新\" class=\"headerlink\" title=\"4. bootstrap-table简单学习，后续持续更新\"></a>4. bootstrap-table简单学习，后续持续更新</h3><p>原创内容，欢迎学习和交流</p>\n","categories":["携程实习"],"tags":["bootstrap-table"]},{"title":"bootstrap-table中data-row-style的实战应用","url":"http://gruad.github.io/2017/02/06/bootstrap-table中data-row-style的实战应用/","content":"<h3 id=\"1-bootstrap-table的table代码\"><a href=\"#1-bootstrap-table的table代码\" class=\"headerlink\" title=\"1. bootstrap-table的table代码\"></a>1. bootstrap-table的table代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;table id=<span class=\"string\">\"table\"</span> </div><div class=\"line\">\tdata-toggle=<span class=\"string\">\"table\"</span></div><div class=\"line\">   \tdata-toolbar=<span class=\"string\">\"#toolbar\"</span></div><div class=\"line\">\tdata-pagination=<span class=\"string\">\"true\"</span></div><div class=\"line\">\tdata-row-style=<span class=\"string\">\"rowStyle\"</span></div><div class=\"line\">    data-show-<span class=\"keyword\">export</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">    data-show-pagination-<span class=\"keyword\">switch</span>=<span class=\"string\">\"true\"</span>\t&gt;</div><div class=\"line\">    ...省略代码</div><div class=\"line\">&lt;<span class=\"regexp\">/table&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"2-rowStyle代码\"><a href=\"#2-rowStyle代码\" class=\"headerlink\" title=\"2. rowStyle代码\"></a>2. rowStyle代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rowStyle</span>(<span class=\"params\">row, style</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        css: &#123;</div><div class=\"line\">            <span class=\"string\">\"font-size\"</span>: <span class=\"string\">\"14px\"</span>,</div><div class=\"line\">            <span class=\"string\">\"white-space\"</span>:<span class=\"string\">\"nowrap\"</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"3-运行结果\"><a href=\"#3-运行结果\" class=\"headerlink\" title=\"3. 运行结果\"></a>3. 运行结果</h3><p><img src=\"/img/bootstraptable.png\" alt=\"\"></p>\n","categories":["bootstrap"],"tags":["bootstrap-table"]},{"title":"selenium中webdriver中父标签的width=0和height=0，子标签无法操作的个人理解","url":"http://gruad.github.io/2017/02/03/selenium中webdriver中父标签的width-0和height-0，子标签无法操作的个人理解/","content":"<ul>\n<li>个人原创，全是实践的结果，欢迎阅读 </li>\n</ul>\n<h3 id=\"1-当class-plugin-modal-dialog的标签width-0和height-0的时候，使用cssSelector方法是无法找到它所包含的字标签的。所以无法操作，提示错误：element-is-unvisible\"><a href=\"#1-当class-plugin-modal-dialog的标签width-0和height-0的时候，使用cssSelector方法是无法找到它所包含的字标签的。所以无法操作，提示错误：element-is-unvisible\" class=\"headerlink\" title=\"1. 当class=plugin-modal-dialog的标签width=0和height=0的时候，使用cssSelector方法是无法找到它所包含的字标签的。所以无法操作，提示错误：element is unvisible\"></a>1. 当class=plugin-modal-dialog的标签width=0和height=0的时候，使用cssSelector方法是无法找到它所包含的字标签的。所以无法操作，提示错误：element is unvisible</h3><p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-0859fbfb81ad6d79.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h3 id=\"2-查阅资料，问题可能原因-解决思路有两种\"><a href=\"#2-查阅资料，问题可能原因-解决思路有两种\" class=\"headerlink\" title=\"2. 查阅资料，问题可能原因  解决思路有两种\"></a>2. 查阅资料，<a href=\"http://www.51testing.com/html/91/79191-829759.html\" target=\"_blank\" rel=\"external\">问题可能原因</a>  解决思路有两种</h3><p><strong> 一 </strong>在webdriver中运行javascript代码，修改相应父标签的属性width和height<br><strong> 二 </strong>既然width=0的标签可以选择到，那么是否可以根据父元素递归找到子元素，进行操作。</p>\n<h3 id=\"根据上述思路一，解决问题步骤\"><a href=\"#根据上述思路一，解决问题步骤\" class=\"headerlink\" title=\"根据上述思路一，解决问题步骤\"></a>根据上述思路一，解决问题步骤</h3><blockquote>\n<ol>\n<li>webdriver中运行javascript代码方法：<a href=\"http://lijingshou.iteye.com/blog/2018929\" target=\"_blank\" rel=\"external\">参考链接</a></li>\n</ol>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-3858d2826c4d45fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<blockquote>\n<ol>\n<li>运行结果，显示成功</li>\n</ol>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-b6b7fad411bd1912.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<blockquote>\n<ol>\n<li>修改成功后，再次运行cssSelector方法，之后操作并不成功。</li>\n</ol>\n</blockquote>\n<h3 id=\"根据上述思路二，解决问题步骤\"><a href=\"#根据上述思路二，解决问题步骤\" class=\"headerlink\" title=\"根据上述思路二，解决问题步骤\"></a>根据上述思路二，解决问题步骤</h3><blockquote>\n<ol>\n<li>首先父元素可以获取到，如下图</li>\n</ol>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-14e9466c8d2f7259.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>运行结果：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-d8f2c1ba7b7dc4c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<blockquote>\n<ol>\n<li>根据可以获得父元素，递归找到子元素（尝试）<br>2.1 首先获取父元素</li>\n</ol>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-72548b1dfe2a07d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<blockquote>\n<p>2.2 然后递归获取子元素</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-c53ed4517347c99b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<blockquote>\n<p>2.3 运行结果，显示获取成功，所以可以成功操作父元素的width=0和height=0时候，子元素无法获取的问题。</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2101255-fb624a63e71a012d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","categories":["百度实习"],"tags":["java 自动化测试 前端测试"]},{"title":"JavaScript实现快速排序算法的最佳实践","url":"http://gruad.github.io/2017/01/26/JavaScript实现快速排序算法的最佳实践/","content":"<h1 id=\"1-快速排序的基本思想\"><a href=\"#1-快速排序的基本思想\" class=\"headerlink\" title=\"1. 快速排序的基本思想\"></a>1. 快速排序的基本思想</h1><p>长话短说，排序算法中快速排序的性能还是不错的，今天我就讲讲javascript中实现快速排序算法。</p>\n<blockquote>\n<p>它的基本思想是：，选择一个基准，通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以<a href=\"http://baike.baidu.com/view/96473.htm\" target=\"_blank\" rel=\"external\">递归</a>进行，以此达到整个数据变成有序<a href=\"http://baike.baidu.com/subview/71968/12546268.htm\" target=\"_blank\" rel=\"external\">序列</a>。</p>\n</blockquote>\n<h1 id=\"2-JavaScript的实现代码\"><a href=\"#2-JavaScript的实现代码\" class=\"headerlink\" title=\"2. JavaScript的实现代码\"></a>2. JavaScript的实现代码</h1><p>我觉得这段程序完美的诠释了算法思想和算法实践》堪称完美<br>另外附上测试数组加结果截图。</p>\n<blockquote>\n<p>个人代码实践截图<br><img src=\"http://upload-images.jianshu.io/upload_images/2101255-3eee152b124ea7f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</blockquote>\n<p>—————————–原文是我的简书博客：<a href=\"http://www.jianshu.com/p/345f12016a1f\" target=\"_blank\" rel=\"external\">我的简书博客</a></p>\n","categories":["算法"],"tags":["快速排序"]},{"title":"从玩魔方看我的学习思维","url":"http://gruad.github.io/2017/01/26/从玩魔方看学习思维/","content":"<h3 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1. 背景\"></a>1. 背景</h3><p>说来话长，最近感情，工作，生活，接连失意。所以想找个可以打发时间的事做做。用来提高自己的自信心。就刚刚好想到了自己一直没能复原的魔方，于是我就试着摸索，挑战一下自己的智力。</p>\n<blockquote>\n<p>我的学习习惯：从小到大，学习任何一个新东西，总是想先自己把原理搞清楚，做出个成绩之后，再去查看现有的成果对比。而不愿意去查阅度娘或问别人，别人眼中的一根筋。不然问别人搞清楚了也浑身不自在。（这是病，要改）</p>\n</blockquote>\n<h3 id=\"2-自己摸索阶段\"><a href=\"#2-自己摸索阶段\" class=\"headerlink\" title=\"2. 自己摸索阶段\"></a>2. 自己摸索阶段</h3><p>摸索了有大概2天左右吧，啥也没搞懂。除了知道三阶魔方有54个面，8个角块（1个角块3个，所以总共3<em>8=24个面），6个中心块（1个中心块只有1个面，所以总共1</em>6=6），12个棱块（1个棱块2个面，所以总共2*12=24个面），加在一起刚刚好54个面。<br>知道角块可以通过上下旋转棱，进行换位，中心块永远在中心位置，且相对的永远相对，其他一概不知，马丹，前前后后旋转了有6个小时吧，啥也没摸索出来。</p>\n<h3 id=\"3-看视频阶段\"><a href=\"#3-看视频阶段\" class=\"headerlink\" title=\"3. 看视频阶段\"></a>3. 看视频阶段</h3><p>于是我终于投降了，决定看视频学习，复原魔方。以下就是视频链接地址。说来奇怪，1个多小时我就学会啦。真的服了自己的学习能力，为什么自己思考就不行呢？学不会呢？</p>\n<p><a href=\"http://video.rubik.com.cn/\" target=\"_blank\" rel=\"external\">魔方小站</a><br>方法共七步：我去，步骤我就不写了，网站有图，更直观。<br>思路大概是：</p>\n<pre><code>1. 一层一层的完成，而不是一面一面的完成。\n2. 第一层需要调整角块即可，调整思路是：旋转侧面，调整即可。\n3. 第二层就是调整棱角块，思路是从上层调整下来即可。\n4. 第三层略微复杂，视频作者说，先多顶层面十字，然后顶层面对好，剩        下的我基本上就是按照他说的那公式，如果没出来那种情况，就胡乱转        成自己熟悉的情况即可。\n</code></pre><h3 id=\"3-以上的思考，以后学习作为参考\"><a href=\"#3-以上的思考，以后学习作为参考\" class=\"headerlink\" title=\"3. 以上的思考，以后学习作为参考\"></a>3. 以上的思考，以后学习作为参考</h3><ol>\n<li>要改掉自己的不爱问人的毛病，他们都是过来人，肯定会懂的比我多。多问，多与人交流学习。只要有所收获，那么就应该不耻下为。改掉怕麻烦人的毛病。</li>\n<li>学习一个新东西新技能新知识，要学会看视频，找资源，这样可以达到事半功倍的效果，比自己闭门造车好很多，自己想再多也还是不会，毕竟刚开始积累的经验和基础和知识不够。</li>\n<li>遇到自己不熟悉的东西和领域，要学会转化成自己熟悉的情况，这样自己就会解决了。</li>\n<li>可以先做出来成果后，再去思考其中的奥妙和原理，不要老是上一步不理解，就永远不进行下一步。这样永远不会成功。好多事情是需要先看到结果，才能够明白其中的原理和奥妙。</li>\n<li>为了提高自己的自信，一定要有目的的，带着问题的去解决问题，而不是胡思乱想，毫无头绪的乱撞。这样不仅浪费时间，还会让自己更烦，让问题更艰难。</li>\n<li>不要害怕东西多，时间不够，心急是解决不了问题的，不如让自己静下心来，慢点没关系，只要自己一直在进步就好啊。好多问题都是这样，你慢慢来，就会发现，其实并没那么难或多，心急的话，问题永远解决不了。</li>\n<li>以上6点是暂时发现的问题，以后会持续补充。<br>—————————————–2017年1月26日，下午16:24写于上海携程</li>\n</ol>\n","categories":["随笔"],"tags":["学习方式"]},{"title":"第一篇文章markdown语法","url":"http://gruad.github.io/2017/01/26/第一篇文章markdown语法/","content":"<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p>\n<blockquote>\n<ul>\n<li>整理知识，学习笔记</li>\n<li>发布日记，杂文，所见所想</li>\n<li>撰写发布技术文稿（代码支持）</li>\n<li>撰写发布学术论文（LaTeX 公式支持）</li>\n</ul>\n</blockquote>\n<p><img src=\"https://www.zybuluo.com/static/img/logo.png\" alt=\"cmd-markdown-logo\"></p>\n<p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>\n<h3 id=\"Windows-Mac-Linux-全平台客户端\"><a href=\"#Windows-Mac-Linux-全平台客户端\" class=\"headerlink\" title=\"Windows/Mac/Linux 全平台客户端\"></a><a href=\"https://www.zybuluo.com/cmd/\" target=\"_blank\" rel=\"external\">Windows/Mac/Linux 全平台客户端</a></h3><blockquote>\n<p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class=\"icon-file\"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>\n</blockquote>\n<hr>\n<h2 id=\"什么是-Markdown\"><a href=\"#什么是-Markdown\" class=\"headerlink\" title=\"什么是 Markdown\"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>\n<h3 id=\"1-制作一份待办事宜-Todo-列表\"><a href=\"#1-制作一份待办事宜-Todo-列表\" class=\"headerlink\" title=\"1. 制作一份待办事宜 Todo 列表\"></a>1. 制作一份待办事宜 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表\" target=\"_blank\" rel=\"external\">Todo 列表</a></h3><ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 支持以 PDF 格式导出文稿</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 新增 Todo 列表功能</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 修复 LaTex 公式渲染问题</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> 新增 LaTex 公式编号功能</li>\n</ul>\n<h3 id=\"2-书写一个质能守恒公式-LaTeX\"><a href=\"#2-书写一个质能守恒公式-LaTeX\" class=\"headerlink\" title=\"2. 书写一个质能守恒公式[^LaTeX]\"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p>\n<h3 id=\"3-高亮一段代码-code\"><a href=\"#3-高亮一段代码-code\" class=\"headerlink\" title=\"3. 高亮一段代码[^code]\"></a>3. 高亮一段代码[^code]</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@requires_authorization</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span>:</span></div><div class=\"line\">    <span class=\"keyword\">pass</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"comment\"># A comment</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'hello world'</span></div></pre></td></tr></table></figure>\n<h3 id=\"4-高效绘制-流程图\"><a href=\"#4-高效绘制-流程图\" class=\"headerlink\" title=\"4. 高效绘制 流程图\"></a>4. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图\" target=\"_blank\" rel=\"external\">流程图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">st=&gt;start: Start</div><div class=\"line\">op=&gt;operation: Your Operation</div><div class=\"line\">cond=&gt;condition: Yes or No?</div><div class=\"line\">e=&gt;end</div><div class=\"line\"></div><div class=\"line\">st-&gt;op-&gt;cond</div><div class=\"line\">cond(yes)-&gt;e</div><div class=\"line\">cond(no)-&gt;op</div></pre></td></tr></table></figure>\n<h3 id=\"5-高效绘制-序列图\"><a href=\"#5-高效绘制-序列图\" class=\"headerlink\" title=\"5. 高效绘制 序列图\"></a>5. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图\" target=\"_blank\" rel=\"external\">序列图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Alice-&gt;Bob: Hello Bob, how are you?</div><div class=\"line\">Note right of Bob: Bob thinks</div><div class=\"line\">Bob--&gt;Alice: I am good thanks!</div></pre></td></tr></table></figure>\n<h3 id=\"6-高效绘制-甘特图\"><a href=\"#6-高效绘制-甘特图\" class=\"headerlink\" title=\"6. 高效绘制 甘特图\"></a>6. 高效绘制 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图\" target=\"_blank\" rel=\"external\">甘特图</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">title 项目开发流程</div><div class=\"line\">section 项目确定</div><div class=\"line\">    需求分析       :a1, 2016-06-22, 3d</div><div class=\"line\">    可行性报告     :after a1, 5d</div><div class=\"line\">    概念验证       : 5d</div><div class=\"line\">section 项目实施</div><div class=\"line\">    概要设计      :2016-07-05  , 5d</div><div class=\"line\">    详细设计      :2016-07-08, 10d</div><div class=\"line\">    编码          :2016-07-15, 10d</div><div class=\"line\">    测试          :2016-07-22, 5d</div><div class=\"line\">section 发布验收</div><div class=\"line\">    发布: 2d</div><div class=\"line\">    验收: 3d</div></pre></td></tr></table></figure>\n<h3 id=\"7-绘制表格\"><a href=\"#7-绘制表格\" class=\"headerlink\" title=\"7. 绘制表格\"></a>7. 绘制表格</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>计算机</td>\n<td style=\"text-align:right\">\\$1600</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>手机</td>\n<td style=\"text-align:right\">\\$12</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td>管线</td>\n<td style=\"text-align:right\">\\$1</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"8-更详细语法说明\"><a href=\"#8-更详细语法说明\" class=\"headerlink\" title=\"8. 更详细语法说明\"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown\" target=\"_blank\" rel=\"external\">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册\" target=\"_blank\" rel=\"external\">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>\n<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>\n<hr>\n<h2 id=\"什么是-Cmd-Markdown\"><a href=\"#什么是-Cmd-Markdown\" class=\"headerlink\" title=\"什么是 Cmd Markdown\"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p>\n<h3 id=\"1-实时同步预览\"><a href=\"#1-实时同步预览\" class=\"headerlink\" title=\"1. 实时同步预览\"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>\n<h3 id=\"2-编辑工具栏\"><a href=\"#2-编辑工具栏\" class=\"headerlink\" title=\"2. 编辑工具栏\"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>\n<p><img src=\"https://www.zybuluo.com/static/img/toolbar-editor.png\" alt=\"tool-editor\"></p>\n<h3 id=\"3-编辑模式\"><a href=\"#3-编辑模式\" class=\"headerlink\" title=\"3. 编辑模式\"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>\n<h3 id=\"4-实时的云端文稿\"><a href=\"#4-实时的云端文稿\" class=\"headerlink\" title=\"4. 实时的云端文稿\"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>\n<h3 id=\"5-离线模式\"><a href=\"#5-离线模式\" class=\"headerlink\" title=\"5. 离线模式\"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>\n<h3 id=\"6-管理工具栏\"><a href=\"#6-管理工具栏\" class=\"headerlink\" title=\"6. 管理工具栏\"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/toolbar-manager.jpg\" alt=\"tool-manager\"></p>\n<p>通过管理工具栏可以：</p>\n<p><i class=\"icon-share\"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class=\"icon-file\"></i> 新建：开始撰写一篇新的文稿<br><i class=\"icon-trash\"></i> 删除：删除当前的文稿<br><i class=\"icon-cloud\"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class=\"icon-reorder\"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class=\"icon-pencil\"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p>\n<h3 id=\"7-阅读工具栏\"><a href=\"#7-阅读工具栏\" class=\"headerlink\" title=\"7. 阅读工具栏\"></a>7. 阅读工具栏</h3><p><img src=\"https://www.zybuluo.com/static/img/toolbar-reader.jpg\" alt=\"tool-manager\"></p>\n<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>\n<p>工具栏上的五个图标依次为：</p>\n<p><i class=\"icon-list\"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class=\"icon-chevron-sign-left\"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class=\"icon-adjust\"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class=\"icon-desktop\"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class=\"icon-fullscreen\"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p>\n<h3 id=\"8-阅读模式\"><a href=\"#8-阅读模式\" class=\"headerlink\" title=\"8. 阅读模式\"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class=\"icon-desktop\"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p>\n<h3 id=\"9-标签、分类和搜索\"><a href=\"#9-标签、分类和搜索\" class=\"headerlink\" title=\"9. 标签、分类和搜索\"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p>\n<p>标签： 未分类</p>\n<p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/file-list.png\" alt=\"file-list\"></p>\n<h3 id=\"10-文稿发布和分享\"><a href=\"#10-文稿发布和分享\" class=\"headerlink\" title=\"10. 文稿发布和分享\"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class=\"icon-share\"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p>\n<hr>\n<p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class=\"icon-file\"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>\n<p>作者 <a href=\"http://weibo.com/ghosert\" target=\"_blank\" rel=\"external\">@ghosert</a><br>2016 年 07月 07日    </p>\n<p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"external\">MathJax</a> 参考更多使用方法。</p>\n<p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>\n","categories":["技术基础"],"tags":["markdown语法"]},{"title":"","url":"http://gruad.github.io/baidu_verify_4RoVvwfS4v.html","content":"4RoVvwfS4v","categories":[],"tags":[]},{"title":"about","url":"http://gruad.github.io/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://gruad.github.io/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://gruad.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://gruad.github.io/project/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://gruad.github.io/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://gruad.github.io/search/index.html","content":"","categories":[],"tags":[]}]